# Generated by Django 4.0.3 on 2022-08-16 00:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroDiskchanged',
            fields=[
                ('created_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('disk_using_gb', models.IntegerField(db_column='disk_using_GB')),
                ('disk_using_percent', models.IntegerField()),
            ],
            options={
                'db_table': 'baro_diskchanged',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroDiskfixed',
            fields=[
                ('disk_path', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('each_total_disk_capacity_gb', models.IntegerField(db_column='each_total_disk_capacity_GB')),
            ],
            options={
                'db_table': 'baro_diskfixed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroGpuchanged',
            fields=[
                ('created_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('gpu_memory_using_mb', models.IntegerField(db_column='gpu_memory_using_MB')),
                ('gpu_memory_using_percent', models.FloatField()),
            ],
            options={
                'db_table': 'baro_gpuchanged',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroGpufixed',
            fields=[
                ('gpu_index', models.IntegerField(primary_key=True, serialize=False)),
                ('each_total_gpu_memory_capacity_mb', models.IntegerField(db_column='each_total_gpu_memory_capacity_MB')),
                ('gpu_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'baro_gpufixed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroNodechanged',
            fields=[
                ('created_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('total_gpu_memory_using_percent', models.FloatField()),
                ('total_gpu_memory_using_mb', models.FloatField(db_column='total_gpu_memory_using_MB')),
                ('free_disk_gb', models.IntegerField(db_column='free_disk_GB')),
                ('free_memory_gb', models.IntegerField(db_column='free_memory_GB')),
                ('free_disk_percent', models.FloatField()),
                ('total_memory_using_percent', models.FloatField()),
                ('total_cpu_using_percent', models.FloatField()),
                ('free_cpu_percent', models.FloatField()),
            ],
            options={
                'db_table': 'baro_nodechanged',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaroNodefixed',
            fields=[
                ('ip', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('host_name', models.CharField(max_length=50)),
                ('total_gpu_memory_capacity_mb', models.IntegerField(db_column='total_gpu_memory_capacity_MB')),
                ('number_of_gpu', models.IntegerField()),
                ('total_disk_capacity_gb', models.IntegerField(db_column='total_disk_capacity_GB')),
                ('total_memory_capacity_gb', models.IntegerField(db_column='total_memory_capacity_GB')),
                ('cpu_name', models.CharField(max_length=50)),
                ('number_of_core', models.IntegerField()),
                ('number_of_thread', models.IntegerField()),
            ],
            options={
                'db_table': 'baro_nodefixed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiskChange',
            fields=[
                ('create_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('disk_using_gb', models.IntegerField(db_column='disk_using_GB')),
                ('disk_using_percent', models.FloatField()),
            ],
            options={
                'db_table': 'DISK_CHANGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DiskFixed',
            fields=[
                ('disk_path', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('each_total_disk_capacity_gb', models.IntegerField(db_column='each_total_disk_capacity_GB')),
            ],
            options={
                'db_table': 'DISK_FIXED',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpuChange',
            fields=[
                ('created_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('gpu_memory_using_mb', models.IntegerField(db_column='gpu_memory_using_MB')),
                ('gpu_memory_using_percent', models.FloatField()),
            ],
            options={
                'db_table': 'GPU_CHANGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GpuFixed',
            fields=[
                ('gpu_index', models.IntegerField(primary_key=True, serialize=False)),
                ('each_total_gpu_memory_capacity_mb', models.IntegerField(db_column='each_total_gpu_memory_capacity_MB')),
                ('gpu_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'GPU_FIXED',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeChange',
            fields=[
                ('created_at', models.DateTimeField(primary_key=True, serialize=False)),
                ('total_gpu_memory_using_percent', models.FloatField()),
                ('total_gpu_memory_using_mb', models.FloatField(db_column='total_gpu_memory_using_MB')),
                ('free_disk_gb', models.IntegerField(db_column='free_disk_GB')),
                ('free_memory_gb', models.IntegerField(db_column='free_memory_GB')),
                ('free_disk_percent', models.FloatField()),
                ('total_memory_using_percent', models.FloatField()),
                ('total_cpu_using_percent', models.FloatField()),
                ('free_cpu_percent', models.FloatField()),
            ],
            options={
                'db_table': 'NODE_CHANGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NodeFixed',
            fields=[
                ('ip', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('host_name', models.CharField(max_length=50)),
                ('total_gpu_memory_capacity_mb', models.IntegerField(db_column='total_gpu_memory_capacity_MB')),
                ('number_of_gpu', models.IntegerField()),
                ('total_disk_capacity_gb', models.IntegerField(db_column='total_disk_capacity_GB')),
                ('total_memory_capacity_gb', models.IntegerField(db_column='total_memory_capacity_GB')),
                ('number_of_core', models.IntegerField()),
                ('number_of_thread', models.IntegerField()),
                ('cpu_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'NODE_FIXED',
                'managed': False,
            },
        ),
    ]
